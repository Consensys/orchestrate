version: "3.7"

x-default-variables: &default-variables
  API_URL: ${API_URL-http://api:8081}
  API_METRICS_URL: ${API_METRICS_URL-http://api:8082}
  TX_SENDER_METRICS_URL: ${TX_SENDER_METRICS_URL-http://tx-sender:8082}
  TX_LISTENER_METRICS_URL: ${TX_LISTENER_METRICS_URL-http://tx-listener:8082}
  KEY_MANAGER_URL: ${KEY_MANAGER_URL-https://quorum-key-manager:8080}
  KEY_MANAGER_METRICS_URL: ${KEY_MANAGER_URL-https://quorum-key-manager:8081}
  KEY_MANAGER_STORE_NAME: ${KEY_MANAGER_STORE_NAME-}
  KEY_MANAGER_TLS_SKIP_VERIFY: ${KEY_MANAGER_TLS_SKIP_VERIFY-}
  KEY_MANAGER_API_KEY: ${KEY_MANAGER_API_KEY-}
  KEY_MANAGER_CLIENT_TLS_CERT: ${KEY_MANAGER_CLIENT_TLS_CERT-}
  KEY_MANAGER_CLIENT_TLS_KEY: ${KEY_MANAGER_CLIENT_TLS_KEY-}
  ETH_CLIENT_RETRY_MAX_ELAPSED_TIME: 5s
  LOG_LEVEL: ${LOG_LEVEL-debug}
  LOG_FORMAT: ${LOG_FORMAT-}
  LOG_TIMESTAMP: ${LOG_TIMESTAMP-true}
  MULTI_TENANCY_ENABLED: ${MULTI_TENANCY_ENABLED-false}
  KAFKA_URL: ${KAFKA_URL-kafka:29092}
  KAFKA_SASL_ENABLED: ${KAFKA_SASL_ENABLED-false}
  KAFKA_SASL_MECHANISM: ${KAFKA_SASL_MECHANISM-PLAIN}
  KAFKA_SASL_USER: ${KAFKA_SASL_USER-}
  KAFKA_SASL_PASSWORD: ${KAFKA_SASL_PASSWORD-}
  KAFKA_TLS_ENABLED: ${KAFKA_TLS_ENABLED-false}
  KAFKA_TLS_INSECURE_SKIP_VERIFY: ${KAFKA_TLS_INSECURE_SKIP_VERIFY-false}
  KAFKA_NUM_CONSUMERS: ${KAFKA_NUM_CONSUMERS-}
  AUTH_API_KEY: ${AUTH_API_KEY-}
  METRICS_MODULES: ${METRICS_MODULES-}
  TOPIC_TX_SENDER: ${TOPIC_TX_SENDER-}

x-container-common: &container-common
  image: golang:1.16.9
#  restart: ${CONTAINER_RESTART-on-failure}
  entrypoint: /bin/main
  tty: true
  networks:
    - orchestrate
    - go_quorum
    - besu
    - geth
  volumes:
    - ./build/bin/orchestrate:/bin/main:ro
  labels:
    filebeat: "true"

x-api-common: &api-common
  DB_TLS_SSLMODE: ${DB_TLS_SSLMODE-}
  DB_TLS_CERT: ${DB_TLS_CERT-}
  DB_TLS_KEY: ${DB_TLS_KEY-}
  DB_TLS_CA: ${DB_TLS_CA-}
  DB_HOST: ${DB_HOST-postgres}
  DB_PORT: ${DB_PORT-}
  DB_DATABASE: ${DB_DATABASE-}
  DB_POOLSIZE: ${DB_POOLSIZE-}
  DB_POOL_TIMEOUT: ${DB_POOL_TIMEOUT-}
  AUTH_JWT_ISSUER_URL: ${AUTH_JWT_ISSUER_URL-}
  AUTH_JWT_AUDIENCE: ${AUTH_JWT_AUDIENCE-}
  AUTH_JWT_ORCHESTRATE_CLAIMS: ${AUTH_JWT_ORCHESTRATE_CLAIMS-}
  ACCESSLOG_ENABLED: ${ACCESSLOG_ENABLED-false}
  PROXY_MAXIDLECONNSPERHOST: ${PROXY_MAXIDLECONNSPERHOST-}
  PROXY_CACHE_TTL: ${PROXY_CACHE_TTL-}

x-tx-listener-common: &tx-listener-common
  API_CACHE_TTL: ${API_CACHE_TTL-}

x-tx-sender-common: &tx-sender-common
  NONCE_MANAGER_TYPE: ${NONCE_MANAGER_TYPE-redis}
  REDIS_HOST: ${REDIS_HOST-redis}
  REDIS_PORT: ${REDIS_PORT-6379}
  REDIS_PASSWORD: ${REDIS_PASSWORD-}
  REDIS_DATABASE: ${REDIS_DATABASE-}
  REDIS_TLS_ENABLE: ${REDIS_TLS_ENABLE-}
  REDIS_TLS_CERT: ${REDIS_TLS_CERT-}
  REDIS_TLS_KEY: ${REDIS_TLS_KEY-}
  REDIS_TLS_CA: ${REDIS_TLS_CA-}
  REDIS_EXPIRATION: ${REDIS_EXPIRATION-}
  REDIS_TLS_SKIP_VERIFY: ${REDIS_TLS_SKIP_VERIFY-}

services:
  api-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *api-common
    restart: "no"
    command: api migrate up

  account-import:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *api-common
    restart: "no"
    command: api account import

  api:
    <<: *container-common
    ports:
      - 8031:8081
      - 8032:8082
    #      - 2345:2345
    environment:
      <<: *default-variables
      <<: *api-common
    volumes:
      - ./build/bin/orchestrate:/bin/main:ro
      - ./scripts/deps/certificates:/certificates
    #      - /usr/local/bin/dlv:/usr/local/bin/dlv
    depends_on:
      - api-migration
    command: api run
    labels:
      filebeat: "false"
  #    entrypoint:
  #      - sh
  #      - -c
  #      - |
  #        dlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient exec /bin/main api run

  tx-sender:
    <<: *container-common
    ports:
      - 8062:8082
#      - 2345:2345
    environment:
      <<: *default-variables
      <<: *tx-sender-common
    volumes:
      - ./build/bin/orchestrate:/bin/main
      - ./scripts/deps/certificates:/certificates
#      - /usr/local/bin/dlv:/usr/local/bin/dlv
    depends_on:
      - api
    command: tx-sender run
#    entrypoint:
#      - sh
#      - -c
#      - |
#        dlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient exec /bin/main tx-sender run

  tx-listener:
    <<: *container-common
    ports:
      - 8082:8082
#      - 2345:2345
    environment:
      <<: *default-variables
      <<: *tx-listener-common
#    volumes:
#      - ./build/bin/orchestrate:/bin/main:ro
#      - /usr/local/bin/dlv:/usr/bin/dlv
    depends_on:
      - api
    command: tx-listener run
#    entrypoint:
#      - sh
#      - -c
#      - |
#        dlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient exec /bin/main tx-listener run
networks:
  orchestrate:
    external:
      name: orchestrate
  go_quorum:
    external:
      name: orchestrate_go_quorum
  besu:
    external:
      name: orchestrate_besu
  geth:
    external:
      name: orchestrate_geth
